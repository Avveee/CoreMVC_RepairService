@model CoreMVC_Exam.Models.Product

@{
    ViewData["Title"] = "EditProduct";
}

<link rel="stylesheet" href="~/css/form.css" />
<h2>EditProduct</h2>

<h4>@Model.id</h4>
<hr />
<div class="formContainer">
    <div class="content">
        <form id="validForm" asp-action="EditProduct">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="id" />
            <div class="form-group">
                <label asp-for="category_id" class="control-label"></label>
                <select asp-for="category_id" class="form-control" asp-items="ViewBag.category_id"></select>
                <span asp-validation-for="category_id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="serial_number" class="control-label"></label>
                <input asp-for="serial_number" class="form-control" />
                <span asp-validation-for="serial_number" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="price" class="control-label"></label>
                <input asp-for="price" class="form-control" />
                <span asp-validation-for="price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="year" class="control-label"></label>
                <input asp-for="year" class="form-control" />
                <span asp-validation-for="year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="brand" class="control-label"></label>
                <input asp-for="brand" class="form-control" />
                <span asp-validation-for="brand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="model" class="control-label"></label>
                <input asp-for="model" class="form-control" />
                <span asp-validation-for="model" class="text-danger"></span>
            </div>
            <div id="submitDiv" class="button">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
        <hr />
        <div style="display:flex; justify-content:space-between;">
            <a href="javascript:window.history.back();"><i class="fa fa-chevron-left" aria-hidden="true"></i></a>
            <button class='btn-link js-delete'>Delete</button>
        </div>
    </div>
</div>

<script>

    $('#validForm').submit(function (e) {
        // предовратить отправку формы
        e.preventDefault();

        // подача Ajax-запроса на сервер при помощи JQuery
        $.ajax({
            url: '/api/Products/' + $('#id').val(),
            method: "PUT",
            data: JSON.stringify({
                id: $('#id').val(),
                category_id: $('#category_id').val(),
                serial_number: $('#serial_number').val(),
                price: $('#price').val(),
                year: $('#year').val(),
                brand: $('#brand').val(),
                model: $('#model').val()
            }),
            dataType: 'JSON',
            contentType: 'application/json',
            cache: false,
            processData: false,
            success: function (data) {
                console.log(data);
                document.location.href = "/Product/Products";
            },
            error: function (data) {
                onError(data);
            }
        })
    });

    function onError(data) {
        console.log(data);
        //alert(data);

        // скрыть все ошибки, показанные на предыдущем шаге валидации
        $("input").removeClass('input-validation-error');
        $("select").removeClass('input-validation-error');
        $("span[data-valmsg-for]").removeClass('field-validation-error');
        $("span[data-valmsg-for]").addClass('field-validation-valid');
        $("span[data-valmsg-for]").text("");

        // если произошла ошибка валидации
        if (data.status == 400) {
            console.log(data.responseJSON);

            // перебрать все полученные ошибки валидации
            //$.each(data.responseJSON.ModelState, function (key, value) {
            $.each(data.responseJSON.errors, function (key, value) {
                //key = key.split('.')[1];

                console.log(key);
                console.log(value);

                // выделить текстовое поле с ошибкой
                var filter = "input[name='" + key + "']";
                $(filter).addClass('input-validation-error');

                // показать сообщение об ошибке для каждого текстового поля с ошибкой
                var validationMessageElement = $('span[data-valmsg-for="' + key + '"]');
                validationMessageElement.removeClass('field-validation-valid');
                validationMessageElement.addClass('field-validation-error');
                validationMessageElement.text(value[0]);
            });
        }
    }

    $("#submitDiv").on("click", ".js-delete", function () {
        var button = $(this);
        {
            $.ajax({
                url: "/api/Products/" + $('#id').val(),
                method: "DELETE",
                success: function () {
                    document.location.href = "/Product/Products";
                }
            }).fail(function () {
                alert('fail');
            })
        }
    });
</script>
